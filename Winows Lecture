xfreerdp /u:student /v:10.50.24.101 /dynamic-resolution +glyph-cache +clipboard
domain controller 10.21.0.1
admin station             2  10.50.38.234
file_server               3
workstation1              4
workstation2              5
terra                     6
minas tirith              7

DAY1
    
    when you run powershell, you actually run system.management.automation.dll
    reads profiles -first thing that happens when powershell session is started
    $profile *** shows current profile
    new-item -itemtype file -path $profile -force            *** creates new $profile
    test-path $profile.~                                     *** shows if profile is enabled
    start-transcript *** starts log of your powershell session
    get-member                                               *** properties and methods of an object ex. get-process | get-member
       get-ciminstance -classname win32_logicaldisk -filter "drivetype=3" | get-member *** example of get-member 
    invoke-command -computername file-server,domain-controller,workstation2 {get-process} -asjob *** can run same command on multiple machines at once
    $wc = new-object system.net.webclient                    *** creates variable $wc that enables use of web api though variable
    $wc.downloadfile(~URL~)                                  *** dwonloads desired file 
    expand-archive ~path to file~                            *** shows list of downloaded file contents
    
DAY2
    cd hklm:\
    Get-itemproperty hklm:\software\microsoft\windows\currentversion\run -name calc
        calc : C:\~\~\calc.exe
        pspath:
        psparentpath:
        pschilditem:
        psdrive:
        psprovider:
    new-item hklm:\~\~\~\~\~ -name imposter
    
    new-itemproperty ~~ -name wumbo -propertytype string -value "c:\windows32\system\chrome.exe" *** listed in get-itemproperty
    
    -name '(default)' -propertytype string -value 'exefile'                  *** overwrites default 
          'content type'                          'application/x-msdownload' *** makes it executable
          
    ls registry::hkey_users
    new-psdrive -name hku -psprovider registry -root hkey_users              *** only lasts for current session
    
    add-content -path $profile.allusersallhosts -value "new-psdrive -name hku -psprovider registry -root hkey_users" *** makes persistant, lasts past current powershell session
    
    gci -r -fi readme
    
    get-childitem -force | ? {$_.length -ne 0} | gc
    
    
WINDOWS BOOT PROCESS

    bios 
    mbr > bootmgr > bcd > winload.exe/winresume.exe > ntoskrnl.exe
    uefi
    gpt > bootmgrfw.efi > bcd > winload.efi/winresume.efi > ntoskrnl.exe
    
    get-content C:\windows\panther\setupact.log | select-string "detected boot environment" *** tells you boot process used
    
    bcdedit | findstr /i winload *** tells you if winload in an .exe or .efi 
    
    ntoskrnl loads registry
    
  In Command Line
    system32\>bcdedit /set {current} description "Windows 10"
                      /create {deez} /d "Windows 10 - House of Cards"
                      /set {deez} device partition=c:
                      /set {deez} path \deez
                      /displayorder {deez} /addfirst
                      /set {deez} safeboot minimal
                      /deletevalue {deez} safeboot
                      /delete {deez} /f
    
    
DAY5
    
    gwmi win32_process | sort processid | ft name, processid
    get-scheduledtask
    tasklist /m /fi  "IMAGENAME POWERSHELL.EXE"
    get-ciminstance win32_process | where { $_.name -like "calculator.exe" } | select name, processid, parentprocessid, path, commandline
    netstat
    procexp64.exe -accepteula / procexp *** details which programs in a user's system have a specific file or directory open
    autoruns -accepteula                *** shows all programs that run automatically 
    sigcheck -m C:\Windows\System32\Malware.exe                                *** can see requested execution level
    Get-item HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System   *** where user account control settings are located
    listdlls                            *** reports .dlls loaded into processes
    loadord                             *** shows service load order
    
    
DAY7
    
    MRU - most recent user "RunMRU" in hkcu\software\microsoft\windows\currentversion\explorer\runmru
    hkey_current_user\software\microsoft\windows\currentversion\explorer\recentdocs
    lastvisitedpidmru - in explorer\ComDlg32
    usb drives in registry - hklm\system\controlset001\enum\ts_usb_hub_enumerator\umb\*
    any devices mounted by os - hklm\system\mounteddevices
    recentdocs - hkcu
    winlogon - hklm
    
    
    get-localuser | select name,sid
    get-wmiobject win32_useraccount | select name,sid *** same commands
    wmic UserAccount get name,sid *** same thing but in command prompt
    
    wmic useraccount where 'sid="***"' get name
    get-content 'C:\$recycle.bin' -recurse -verbose -force | select *
    gci -path 'C:\windows\prefetch' -erroraction continure | select * | select-first 5
    gci -recurse C:\users\*\appdata\roaming\microsoft\windows\recent -erroraction continue | select fullname, lastaccesstime
    
    .\strings.exe -accepteula 'C:\Users\<username>\AppData\Local\Google\Chrome\User Data\Default\History'
    
    Auditing
        View entire auditpol list
            auditpol /get /category:*
        Set File System subcategory to audit
            auditpol /set /subcategory:"File System"
        Remove File System subcategory auditing
            auditpol /set /subcategory:"File System" /success:disable
        To list the global object access auditing entries set on files or folders:
            auditpol /resourceSACL /type:File /view
    
    C:\Windows\System32\Winevt\eventvwr *** event logs
    
    show all logs
        wevtutil el
    get log info
        wevtutil gli security
    get last 3 events
        wevtutil qe security /c:3 /f:text
    View newest 10 System Logs
        Get-EventLog -LogName System -Newest 10
    View the entire message field in the Security Log
        Get-Eventlog -LogName Security | ft -wrap
    
    
    gci -Path 'C:\Windows\Prefetch' -ErrorAction Continue | select * | select -first 5
    
    get-eventlog -logname system | where-object {$_.Message -match "flag"}
    
    
    
    
